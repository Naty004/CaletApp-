@model Domain.Categoria

@{
    ViewData["Title"] = "Crear Categoría";
}

<div class="container mt-4">
    <h1>Crear Nueva Categoría</h1>

    <form asp-action="Create" method="post" class="mt-4 needs-validation" novalidate>
        <div class="mb-3">
            <label asp-for="Nombre" class="form-label">Nombre</label>
            <input asp-for="Nombre" class="form-control" required />
            <span asp-validation-for="Nombre" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Descripcion" class="form-label">Descripción (opcional)</label>
            <textarea asp-for="Descripcion" class="form-control" rows="3"></textarea>
            <span asp-validation-for="Descripcion" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="PorcentajeMaximoMensual" class="form-label">Porcentaje Máximo Mensual (%)</label>
            <input asp-for="PorcentajeMaximoMensual" class="form-control" type="number" min="0" max="100" step="0.01" required />
            <span asp-validation-for="PorcentajeMaximoMensual" class="text-danger"></span>
        </div>

        <button type="submit" class="btn btn-success">Guardar</button>
        <a asp-action="Index" class="btn btn-secondary ms-2">Cancelar</a>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // Bootstrap custom validation script
        (() => {
            'use strict'

            const forms = document.querySelectorAll('.needs-validation')

            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
        })()
    </script>
}
