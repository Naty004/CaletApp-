@model Domain.Categoria

@{
    ViewData["Title"] = "Crear Categoría";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />

<div class="container mt-4">
    <h2>@ViewData["Title"]</h2>

    <form asp-action="Create" method="post" class="needs-validation" novalidate>
        <div class="mb-3">
            <label asp-for="Nombre" class="form-label"></label>
            <input asp-for="Nombre" class="form-control @(ViewData.ModelState["Nombre"]?.Errors.Count > 0 ? "is-invalid" : "")" />
            <div class="invalid-feedback">
                @foreach (var error in ViewData.ModelState["Nombre"]?.Errors ?? Enumerable.Empty<Microsoft.AspNetCore.Mvc.ModelBinding.ModelError>())
                {
                    <span>@error.ErrorMessage</span>
                }
                <span>El nombre es obligatorio.</span>
            </div>
        </div>

        <div class="mb-3">
            <label asp-for="Descripcion" class="form-label"></label>
            <textarea asp-for="Descripcion" class="form-control" rows="3"></textarea>
        </div>

        <div class="mb-3">
            <label asp-for="PorcentajeMaximoMensual" class="form-label"></label>
            <input asp-for="PorcentajeMaximoMensual" type="number" step="0.01" min="0" max="100" class="form-control @(ViewData.ModelState["PorcentajeMaximoMensual"]?.Errors.Count > 0 ? "is-invalid" : "")" />
            <div class="invalid-feedback">
                @foreach (var error in ViewData.ModelState["PorcentajeMaximoMensual"]?.Errors ?? Enumerable.Empty<Microsoft.AspNetCore.Mvc.ModelBinding.ModelError>())
                {
                    <span>@error.ErrorMessage</span>
                }
                <span>Debe estar entre 0 y 100.</span>
            </div>
        </div>

        <button type="submit" class="btn btn-primary">Agregar Categoría</button>
        <a href="@Url.Action("Index", "Categoria")" class="btn btn-secondary ms-2">Cancelar</a>
    </form>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    (() => {
        'use strict';
        const forms = document.querySelectorAll('.needs-validation');
        Array.from(forms).forEach(form => {
            form.addEventListener('submit', event => {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        });
    })();
</script>

