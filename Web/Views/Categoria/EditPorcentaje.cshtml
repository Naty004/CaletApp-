@model Domain.Categoria

@{
    ViewData["Title"] = "Editar Porcentaje Máximo Mensual";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

<div class="container mt-4">
    <h2>@ViewData["Title"] - @Model.Nombre</h2>

    @if (!ViewData.ModelState.IsValid && ViewData.ModelState.Values.Any(v => v.Errors.Count > 0))
    {
        <div class="alert alert-danger">
            <ul class="mb-0">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }

    <form asp-action="EditPorcentaje" method="post" class="needs-validation" novalidate>
        <input type="hidden" asp-for="Id" />

        <div class="mb-3">
            <label for="nuevoPorcentaje" class="form-label">Porcentaje Máximo Mensual (%) <span class="text-danger">*</span></label>
            <input type="number" step="0.01" min="0" max="100"
                   class="form-control @(ViewData.ModelState["nuevoPorcentaje"]?.Errors.Count > 0 ? "is-invalid" : "")"
                   id="nuevoPorcentaje" name="nuevoPorcentaje"
                   value="@(ViewContext.HttpContext.Request.Method == "POST" 
                                ? ViewContext.HttpContext.Request.Form["nuevoPorcentaje"].ToString() 
                                : Model.PorcentajeMaximoMensual.ToString("0.##"))"
                   required />
            <div class="invalid-feedback">
                @foreach (var error in ViewData.ModelState["nuevoPorcentaje"]?.Errors ?? Enumerable.Empty<Microsoft.AspNetCore.Mvc.ModelBinding.ModelError>())
                {
                    <div>@error.ErrorMessage</div>
                }
            </div>
        </div>

        <button type="submit" class="btn btn-primary">Guardar Cambios</button>
        <a href="@Url.Action("Index", "Categoria")" class="btn btn-secondary ms-2">Cancelar</a>
    </form>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    (() => {
        'use strict';
        const forms = document.querySelectorAll('.needs-validation');
        Array.from(forms).forEach(form => {
            form.addEventListener('submit', event => {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        });
    })();
</script>
